import Adafruit_DHT  # https://github.com/adafruit/Adafruit_Python_DHT
from time import sleep


class AM2301(object):
    def __init__(self, gpio_pin):
        self.gpio_pin = gpio_pin
        self.temperature, self.humidity = self.temperature_humidity()

    def temperature_humidity(self):
        """
        Uses an AM2301 sensor to get ambient temperature and humidity.

        Parameters
            gpio_pin        int
                            The GPIO pin the AM2301 is connected to.
        Returns
            humidity        float
                            humidity data generated by AM2301
            temp_celsius    float
                            temperature data in celsius generated by AM2301
        """

        sensor = Adafruit_DHT.AM2302
        successful_reading = False

        while successful_reading is False:
            humidity, temp_celsius = Adafruit_DHT.read_retry(sensor, self.gpio_pin)
            if humidity is None:
                print(f"Humidity sensor returning {humidity}, Trying again...")
                sleep(1)
            elif humidity > 100 or humidity < 0:
                print(
                    f"Humidity sensor returning {humidity}% humidity. Trying again..."
                )
                sleep(1)
            else:
                successful_reading = True

        # humidity, temp_celsius = Adafruit_DHT.read_retry(sensor, gpio_pin)

        humidity = round(humidity, 1)
        temp_celsius = round(temp_celsius, 1)

        return temp_celsius, humidity


if __name__ == "__main__":
    gpio_pin = 14
    a = AM2301(gpio_pin=gpio_pin)

    temp_celsius = a.temperature
    humidity = a.humidity

    print("Humidity:\t{}%".format(humidity))
    print("Celsius:\t{}c".format(temp_celsius))
